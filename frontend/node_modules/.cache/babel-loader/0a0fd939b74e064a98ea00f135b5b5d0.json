{"ast":null,"code":"var _jsxFileName = \"/Users/krysta/Flatiron/code/Mod5/homeinvent_jwt/frontend/src/App.js\";\nimport React from 'react'; // import paintings from './painting'\n\nimport 'semantic-ui-css/semantic.min.css';\nimport NavBar from './NavBar';\nimport ProductList from './ProductList';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport Dashboard from './Dashboard';\nimport { Link } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getProducts = () => {\n      fetch(\"http://localhost:3000/api/v1/products\", {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.token)\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          products: data\n        });\n      });\n      console.log(this.state.products);\n    };\n\n    this.state = {\n      testNew: \"testnew\",\n      test: \"test\",\n      form: false,\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  } // addPainting = (e) => {\n  //   e.preventDefault()\n  //   let newPainting = {\n  //     name: e.target[0].value,\n  //     color: e.target[1].value,\n  //     price: {\n  //       name: e.target[2].value\n  //     }\n  //   }\n  //   let newArr = [...this.state.paintings, newPainting]\n  //   this.setState({\n  //     products: newArr\n  //   }) \n  // }\n\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Show Products\"), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      component: routerProps => React.createElement(Login, Object.assign({}, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/products\",\n      render: () => React.createElement(ProductList, {\n        products: this.state.products,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \"if(localStorage.token !== 'undefined') \", // <ProductList products={this.state.products}  />\n    React.createElement(Route, {\n      path: \"/products\",\n      render: routerProps => React.createElement(ProductList, Object.assign({}, routerProps, {\n        products: this.state.products,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/krysta/Flatiron/code/Mod5/homeinvent_jwt/frontend/src/App.js"],"names":["React","NavBar","ProductList","BrowserRouter","Route","Switch","Login","SignUp","Dashboard","Link","App","Component","constructor","getProducts","fetch","method","headers","Authorization","localStorage","token","then","res","json","data","setState","products","console","log","state","testNew","test","form","componentDidMount","render","routerProps"],"mappings":"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","sourcesContent":["import React from 'react';\n// import paintings from './painting'\nimport 'semantic-ui-css/semantic.min.css';\nimport NavBar from './NavBar'\nimport ProductList from './ProductList'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Login from './Login'\nimport SignUp from './SignUp'\nimport Dashboard from './Dashboard'\nimport {Link} from 'react-router-dom'\n\n\n\nclass App extends React.Component{\n\n  constructor(){\n    super()\n    this.state = {\n      testNew: \"testnew\",\n      test: \"test\",\n      form: false,\n      products: []\n    }\n  }\n\n  componentDidMount(){\n    this.getProducts()\n  }\n  // addPainting = (e) => {\n  //   e.preventDefault()\n  \n  //   let newPainting = {\n  //     name: e.target[0].value,\n  //     color: e.target[1].value,\n  //     price: {\n  //       name: e.target[2].value\n  //     }\n  //   }\n\n  //   let newArr = [...this.state.paintings, newPainting]\n\n  //   this.setState({\n  //     products: newArr\n  //   }) \n  // }\n\n  getProducts = () => {\n      fetch(\"http://localhost:3000/api/v1/products\",\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        } \n      })\n      .then(res => res.json())\n\n      .then(data => {\n        this.setState({\n          products: data\n        })\n      })   \n      console.log(this.state.products)\n  }\n\n  render(){\n\n    return (\n   \n      <BrowserRouter>\n    <div>\n        <NavBar />\n        <button onClick={this.getProducts}>Show Products</button>\n        <Switch>\n\n        {/* <Route path=\"/login\" component={Login} /> */}\n        <Route path=\"/login\" component={(routerProps)=><Login {...routerProps} />} />\n\n        <Route path=\"/signup\" component={SignUp} />\n\n        {/* <Route path=\"/paintings/new\" render = {(routeProps) =><PaintingForm {...routeProps} add={this.addPainting} /> } /> */}\n\n        <Route path=\"/products\" render={() => <ProductList products={this.state.products} />}/>\n      \n        if(localStorage.token !== 'undefined') {\n            // <ProductList products={this.state.products}  />\n    \n            <Route path='/products' render={routerProps => <ProductList {...routerProps} products={this.state.products}/>} />\n          }\n        </Switch>\n        \n\n    </div>\n    </BrowserRouter>\n  )};\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}