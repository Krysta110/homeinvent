{"ast":null,"code":"var _jsxFileName = \"/Users/krysta/Flatiron/code/Mod5/homeinvent_jwt/frontend/src/AddCorderForm.js\";\n// import { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport * as React from 'react'; // import * as ReactDOM from \"react-dom\";\n// import React from 'react'\n\nimport { Link } from 'react-router-dom';\nimport \"../node_modules/@syncfusion/ej2-base/styles/material.css\";\nimport \"../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\nimport \"../node_modules/@syncfusion/ej2-react-dropdowns/styles/material.css\";\n\nclass AddCorderForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }); // console.log(\"inside handleChange, state: \", this.state)\n    };\n\n    this.handleAddNewCorder = e => {\n      e.preventDefault();\n      console.log(\"Inside Handleadd method: state: \", this.state);\n      console.log(\"Inside Handleadd method, props: \", this.props);\n      fetch(\"http://localhost:3000/api/v1/corders\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          'Accept': 'application/json',\n          Authorization: \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify({\n          customer_id: this.state.customer_id,\n          total_paid: this.state.total_paid,\n          paid_with: this.state.paid_with,\n          item_id: this.state.item_id\n        })\n      }).then(res => res.json()).then(newCO => {\n        // console.log(\"New Prodyct in addNEw method then: \", newPO)\n        this.props.add(newCO);\n      });\n    };\n\n    this.goToAllCorders = () => {\n      this.props.history.push(\"/corders\");\n    };\n  }\n\n  render() {\n    const items = this.props.items;\n    console.log(\"items is this.props: \", this.props);\n    console.log(\"items is : \", items);\n    let itemsList = items.length > 0 && items.map((itemp, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: itemp.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, itemp.product.name);\n    }, this);\n    const customers = this.props.customers; // console.log(\"customers is this.props: \", this.props )\n    // console.log(\"customers is : \", customers )\n\n    let customersList = customers.length > 0 && customers.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, item.name);\n    }, this);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, console.log(\"Addpoform props.items : \", this.props.items), console.log(\"Addpoform props.customers : \", this.props.customers), console.log(\"Addpoform state : \", this.state), localStorage.token ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        this.handleAddNewCorder(e);\n        this.goToAllCorders();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Customer:\"), React.createElement(\"select\", {\n      class: \"ui search dropdown\",\n      name: \"customer_id\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Select Customer\"), customersList))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Total Paid: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"total_paid\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Paid With: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"paid_with\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Item:\", React.createElement(\"select\", {\n      name: \"item_id\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, itemsList)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Customer Order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/corders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"View All Purchase Orders\"))) : React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Please Log In to add a new Purchase Order\"));\n  }\n\n}\n\nexport default AddCorderForm;","map":{"version":3,"sources":["/Users/krysta/Flatiron/code/Mod5/homeinvent_jwt/frontend/src/AddCorderForm.js"],"names":["React","Link","AddCorderForm","Component","handleChange","e","setState","target","name","value","handleAddNewCorder","preventDefault","console","log","state","props","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","customer_id","total_paid","paid_with","item_id","then","res","json","newCO","add","goToAllCorders","history","push","render","items","itemsList","length","map","itemp","i","id","product","customers","customersList","item"],"mappings":"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","sourcesContent":["// import { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport * as React from 'react';\n// import * as ReactDOM from \"react-dom\";\n\n// import React from 'react'\nimport {Link} from 'react-router-dom'\nimport \"../node_modules/@syncfusion/ej2-base/styles/material.css\";\nimport \"../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\nimport \"../node_modules/@syncfusion/ej2-react-dropdowns/styles/material.css\";\n\n\nclass AddCorderForm extends React.Component{\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        // console.log(\"inside handleChange, state: \", this.state)\n    }\n\n    handleAddNewCorder = (e) => {  \n        e.preventDefault()\n        console.log(\"Inside Handleadd method: state: \", this.state)\n        console.log(\"Inside Handleadd method, props: \", this.props)\n\n        fetch(\"http://localhost:3000/api/v1/corders\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                'Accept': 'application/json',\n                Authorization: `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify({\n                customer_id: this.state.customer_id,\n                total_paid: this.state.total_paid,\n                paid_with: this.state.paid_with,\n                item_id: this.state.item_id\n\n            })\n        })\n        .then(res => res.json())\n        .then(newCO => {\n            // console.log(\"New Prodyct in addNEw method then: \", newPO)\n            this.props.add(newCO)\n        })\n\n    }\n\n\n    goToAllCorders = () => {\n        this.props.history.push(\"/corders\")\n    }\n\n        \n    \n      render () {\n        const { items } = this.props;\n        console.log(\"items is this.props: \", this.props )\n        console.log(\"items is : \", items )\n\n    \n        let itemsList = items.length > 0\n            && items.map((itemp, i) => {\n          return (\n            <option key={i} value={itemp.id}>{itemp.product.name}</option>\n          )\n        }, this);\n\n\n        const { customers } = this.props;\n        // console.log(\"customers is this.props: \", this.props )\n        // console.log(\"customers is : \", customers )\n        let customersList = customers.length > 0\n            && customers.map((item, i) => {\n          return (\n            <option key={i} value={item.id}>{item.name}</option>\n          )\n        }, this);\n    \n    \n        return(\n            <div>\n                {console.log(\"Addpoform props.items : \", this.props.items)}\n                {console.log(\"Addpoform props.customers : \", this.props.customers)}\n\n                {console.log(\"Addpoform state : \", this.state)}\n    \n    \n             {localStorage.token\n                ? <div>\n    \n                <form onSubmit={(e) => {\n                    this.handleAddNewCorder(e)\n                    this.goToAllCorders()\n                    }}>\n    \n                    {/* <p> Customer: \n                    <select name=\"customer_id\" onChange={(e) => this.handleChange(e)}>\n                             {customersList}\n                    </select>\n                    </p> */}\n\n                    <div class=\"ui form\">\n                    <div class=\"field\">\n                        <label>Customer:</label>\n                        <select class=\"ui search dropdown\" name=\"customer_id\" onChange={(e) => this.handleChange(e)}>\n                        <option value=\"\">Select Customer</option>\n                        {customersList}\n                        </select>\n                    </div>\n                    </div>\n\n                    <p>Total Paid: <input type='text' name=\"total_paid\"  onChange={(e) => this.handleChange(e)}/> </p>\n                    <p>Paid With: <input type='text' name=\"paid_with\" onChange={(e) => this.handleChange(e)}/></p>\n                    \n                    <p> Item: \n                    <select name=\"item_id\" onChange={(e) => this.handleChange(e)}>\n                        {itemsList}\n                    </select>\n                    </p>\n                    \n       \n                    <p><input type='submit' value='Add Customer Order'/></p>\n    \n                </form>\n    \n                \n                \n                <p><Link to=\"/corders\">View All Purchase Orders</Link></p>\n                \n                </div>\n                : <h4> Please Log In to add a new Purchase Order</h4>\n            }\n    \n            </div>\n        )}\n    }\n    \n    export default AddCorderForm\n    \n    "]},"metadata":{},"sourceType":"module"}